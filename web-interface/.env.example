# Certificate Manager Web Interface Environment Configuration

# Server Configuration
PORT=3000
NODE_ENV=production

# Frontend URL (for CORS)
FRONTEND_URL=http://localhost:3001

# Authentication
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
ADMIN_USER=admin

# üîê SECURE PASSWORD CONFIGURATION (Choose ONE option)
# 
# Option 1: RECOMMENDED - Use password hash (secure)
# Generate hash with: cd web-interface && npm run hash-password "your-secure-password"
# ADMIN_PASS_HASH=$2b$12$example.hash.here.replace.with.generated.hash
#
# Option 2: Plain text password (NOT recommended for production)
# ADMIN_PASS=your-secure-admin-password
#
# ‚ö†Ô∏è  For security, use ADMIN_PASS_HASH instead of ADMIN_PASS
# ‚ö†Ô∏è  The application will warn you if using plain text passwords

# Default hash for password: "change-this-password" (CHANGE THIS!)
ADMIN_PASS_HASH=$2a$12$BMcKWvwy1N7PGkTBRtyxPO5eDp.S5eeRKG4/4PvuQ4M0.YthB09fu

# SSL Configuration (optional, for HTTPS)
SSL_KEY=/path/to/ssl/private.key
SSL_CERT=/path/to/ssl/certificate.crt

# Logging
LOG_LEVEL=info
LOG_FILE=/var/log/cert-manager-web.log

# Rate Limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# File Upload
MAX_FILE_SIZE=10485760
UPLOAD_DIR=/etc/easy-rsa/pending-requests

# Easy-RSA Configuration
EASYRSA_DIR=/etc/easy-rsa
CERT_MANAGER_CMD=/opt/cert-manager/cert-manager

# Docker Configuration (used by docker-compose)
COMPOSE_PROJECT_NAME=cert-manager-web
RESTART_POLICY=unless-stopped

# Database (if you want to add user management later)
# DB_HOST=localhost
# DB_PORT=5432
# DB_NAME=cert_manager
# DB_USER=cert_manager
# DB_PASS=secure-db-password

# Email notifications (future feature)
# SMTP_HOST=smtp.example.com
# SMTP_PORT=587
# SMTP_USER=notifications@example.com
# SMTP_PASS=smtp-password
# NOTIFICATION_EMAIL=admin@example.com